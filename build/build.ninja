# This is the build file for project "MyGame"
# It is autogenerated by the Meson build system.
# Do not edit by hand.

ninja_required_version = 1.8.2

# Rules for module scanning.

# Rules for compiling.

rule cpp_COMPILER
 command = c++ $ARGS -MD -MQ $out -MF $DEPFILE -o $out -c $in
 deps = gcc
 depfile = $DEPFILE_UNQUOTED
 description = Compiling C++ object $out

# Rules for linking.

rule cpp_LINKER
 command = c++ $ARGS -o $out $in $LINK_ARGS
 description = Linking target $out

# Other rules

rule CUSTOM_COMMAND
 command = $COMMAND
 description = $DESC
 restat = 1

rule REGENERATE_BUILD
 command = /usr/bin/meson --internal regenerate /home/kunruh/src/The-Moor-of-Venice .
 description = Regenerating build files.
 generator = 1

# Phony build target, always out of date

build PHONY: phony 

# Build rules for targets

build MyGame.p/src_main.cpp.o: cpp_COMPILER ../src/main.cpp
 DEPFILE = MyGame.p/src_main.cpp.o.d
 DEPFILE_UNQUOTED = MyGame.p/src_main.cpp.o.d
 ARGS = -IMyGame.p -I. -I.. -fdiagnostics-color=always -D_FILE_OFFSET_BITS=64 -Wall -Winvalid-pch -std=c++17 -O0 -g

build MyGame.p/src_Game.cpp.o: cpp_COMPILER ../src/Game.cpp
 DEPFILE = MyGame.p/src_Game.cpp.o.d
 DEPFILE_UNQUOTED = MyGame.p/src_Game.cpp.o.d
 ARGS = -IMyGame.p -I. -I.. -fdiagnostics-color=always -D_FILE_OFFSET_BITS=64 -Wall -Winvalid-pch -std=c++17 -O0 -g

build MyGame.p/src_AI.cpp.o: cpp_COMPILER ../src/AI.cpp
 DEPFILE = MyGame.p/src_AI.cpp.o.d
 DEPFILE_UNQUOTED = MyGame.p/src_AI.cpp.o.d
 ARGS = -IMyGame.p -I. -I.. -fdiagnostics-color=always -D_FILE_OFFSET_BITS=64 -Wall -Winvalid-pch -std=c++17 -O0 -g

build MyGame.p/src_Board.cpp.o: cpp_COMPILER ../src/Board.cpp
 DEPFILE = MyGame.p/src_Board.cpp.o.d
 DEPFILE_UNQUOTED = MyGame.p/src_Board.cpp.o.d
 ARGS = -IMyGame.p -I. -I.. -fdiagnostics-color=always -D_FILE_OFFSET_BITS=64 -Wall -Winvalid-pch -std=c++17 -O0 -g

build MyGame: cpp_LINKER MyGame.p/src_main.cpp.o MyGame.p/src_Game.cpp.o MyGame.p/src_AI.cpp.o MyGame.p/src_Board.cpp.o | /usr/lib/gcc/x86_64-linux-gnu/13/libstdc++fs.a /usr/lib/x86_64-linux-gnu/libsfml-audio.so.2.6.1 /usr/lib/x86_64-linux-gnu/libsfml-graphics.so.2.6.1 /usr/lib/x86_64-linux-gnu/libsfml-network.so.2.6.1 /usr/lib/x86_64-linux-gnu/libsfml-system.so.2.6.1 /usr/lib/x86_64-linux-gnu/libsfml-window.so.2.6.1
 LINK_ARGS = -Wl,--as-needed -Wl,--no-undefined -Wl,--start-group -lsfml-graphics -lsfml-window -lsfml-audio -lsfml-network -lsfml-system -lstdc++fs -Wl,--end-group -static-libgcc -static-libstdc++

# Test rules

build test: phony meson-internal__test

build meson-internal__test: CUSTOM_COMMAND all PHONY
 COMMAND = /usr/bin/meson test --no-rebuild --print-errorlogs
 DESC = Running$ all$ tests.
 pool = console

build benchmark: phony meson-internal__benchmark

build meson-internal__benchmark: CUSTOM_COMMAND all PHONY
 COMMAND = /usr/bin/meson test --benchmark --logbase benchmarklog --num-processes=1 --no-rebuild
 DESC = Running$ benchmark$ suite.
 pool = console

# Install rules

build install: phony meson-internal__install

build meson-internal__install: CUSTOM_COMMAND PHONY | all
 DESC = Installing$ files.
 COMMAND = /usr/bin/meson install --no-rebuild
 pool = console

build dist: phony meson-internal__dist

build meson-internal__dist: CUSTOM_COMMAND PHONY
 DESC = Creating$ source$ packages
 COMMAND = /usr/bin/meson dist
 pool = console

# Suffix

build uninstall: phony meson-internal__uninstall

build meson-internal__uninstall: CUSTOM_COMMAND PHONY
 COMMAND = /usr/bin/meson --internal uninstall
 pool = console

build all: phony meson-test-prereq meson-benchmark-prereq MyGame

build meson-test-prereq: phony 

build meson-benchmark-prereq: phony 

build clean: phony meson-internal__clean

build meson-internal__clean: CUSTOM_COMMAND PHONY
 COMMAND = /usr/bin/ninja -t clean
 description = Cleaning

build build.ninja: REGENERATE_BUILD ../meson.build meson-private/coredata.dat
 pool = console

build reconfigure: REGENERATE_BUILD PHONY
 pool = console

build ../meson.build meson-private/coredata.dat: phony 

default all

